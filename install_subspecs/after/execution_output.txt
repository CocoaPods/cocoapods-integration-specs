CLAIDE_DISABLE_AUTO_WRAP=TRUE CP_AGGRESSIVE_CACHE=TRUE CP_REPOS_DIR=ROOT/spec/fixtures/spec-repos XCODEPROJ_DISABLE_XCPROJ=TRUE ruby ROOT/bin/pod install --no-repo-update --verbose --no-ansi 2>&1
  Preparing

Analyzing dependencies

Inspecting targets to integrate
  Using `ARCHS` setting to build architectures of target `Pods`: (`$(ARCHS_STANDARD_64_BIT)`)
  Using `ARCHS` setting to build architectures of target `Pods-iOS App`: (`$(ARCHS_STANDARD_64_BIT)`)
  Using `ARCHS` setting to build architectures of target `Pods-OS X App`: (`$(ARCHS_STANDARD_64_BIT)`)

Fetching external sources
-> Pre-downloading: `PodTest` from `PodTest-hg-source`
 > Mercurial download
   $ HG_BIN clone PodTest-hg-source ROOT/tmp/install_subspecs/Pods/PodTest
   updating to branch default
   5 files updated, 0 files merged, 0 files removed, 0 files unresolved

Resolving dependencies of `Podfile`
Starting resolution (<#DATE#>)
Creating possibility state for PodTest/subspec_1 (from `PodTest-hg-source`) (1 remaining)
  Attempting to activate PodTest/subspec_1 (1.0)
  Activated PodTest/subspec_1 at PodTest/subspec_1 (1.0)
  Requiring nested dependencies ()
  Creating possibility state for PodTest/subspec_2 (from `PodTest-hg-source`) (1 remaining)
    Attempting to activate PodTest/subspec_2 (1.0)
    Activated PodTest/subspec_2 at PodTest/subspec_2 (1.0)
    Requiring nested dependencies ()
Finished resolution (2 steps) (Took <#DURATION#> seconds) (<#DATE#>)
Unactivated: 
Activated: PodTest/subspec_1, PodTest/subspec_2

Comparing resolved specification to the sandbox manifest
  A PodTest

Downloading dependencies

-> Installing PodTest (1.0)
  - Running pre install hooks

Generating Pods project
  - Creating Pods project
  - Adding source files to Pods project
  - Adding frameworks to Pods project
  - Adding libraries to Pods project
  - Adding resources to Pods project
  - Linking headers
  - Installing targets
    - Installing target `Pods-OS X App-PodTest` OS X 10.6
      - Generating Info.plist file at `Pods/Target Support Files/Pods-OS X App-PodTest/Info.plist`
      - Generating module map file at `Pods/Target Support Files/Pods-OS X App-PodTest/Pods-OS X App-PodTest.modulemap`
      - Generating umbrella header at `Pods/Target Support Files/Pods-OS X App-PodTest/Pods-OS X App-PodTest-umbrella.h`
    - Installing target `Pods-iOS App-PodTest` iOS 4.3
    - Installing target `Pods-OS X App` OS X 10.6
      - Generating Info.plist file at `Pods/Target Support Files/Pods-OS X App/Info.plist`
      - Generating module map file at `Pods/Target Support Files/Pods-OS X App/Pods-OS X App.modulemap`
      - Generating umbrella header at `Pods/Target Support Files/Pods-OS X App/Pods-OS X App-umbrella.h`
    - Installing target `Pods-iOS App` iOS 4.3
  - Running post install hooks
  - Writing Xcode project file to `Pods/Pods.xcodeproj`
  - Writing Lockfile in `Podfile.lock`
  - Writing Manifest in `Pods/Manifest.lock`

Integrating client project

[!] From now on use `SampleApp.xcworkspace`.

Integrating target `Pods-OS X App` (`SampleApp.xcodeproj` project)
  Adding Build Phase 'Embed Pods Frameworks' to project.

Integrating target `Pods-iOS App` (`SampleApp.xcodeproj` project)

[!] The `iOS App [Release]` target overrides the `OTHER_CFLAGS` build setting defined in `Pods/Target Support Files/Pods-iOS App/Pods-iOS App.release.xcconfig'. This can lead to problems with the CocoaPods installation
    - Use the `$(inherited)` flag, or
    - Remove the build settings from the target.
