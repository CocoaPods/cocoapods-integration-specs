CLAIDE_DISABLE_AUTO_WRAP=TRUE COCOAPODS_DISABLE_STATS=TRUE COCOAPODS_SKIP_CACHE=TRUE COCOAPODS_VALIDATOR_SKIP_XCODEBUILD=TRUE CP_REPOS_DIR=ROOT/spec/fixtures/spec-repos ruby ROOT/bin/pod install --no-repo-update --verbose --no-ansi 2>&1
  Preparing

Analyzing dependencies

Inspecting targets to integrate
  Using `ARCHS` setting to build architectures of target `Pods-SampleApp_1`: (`$(ARCHS_STANDARD_64_BIT)`)
  Using `ARCHS` setting to build architectures of target `Pods-SampleApp_2`: (`$(ARCHS_STANDARD_64_BIT)`)

Resolving dependencies of `Podfile`

Comparing resolved specification to the sandbox manifest
  A Reachability

Downloading dependencies

-> Installing Reachability (3.1.0)
 > Git download
 > Git download
     $ GIT_BIN clone https://github.com/tonymillion/Reachability.git PROJECT/Pods/Reachability --template= --single-branch --depth 1 --branch v3.1.0
     Cloning into 'PROJECT/Pods/Reachability'...
     Note: checking out 'f7176f4798d068d233dca5223ae4bd9c8059e830'.

     You are in 'detached HEAD' state. You can look around, make experimental
     changes and commit them, and you can discard any commits you make in this
     state without impacting any branches by performing another checkout.

     If you want to create a new branch to retain commits you create, you may
     do so (now or later) by using -b with the checkout command again. Example:

       git checkout -b new_branch_name

  - Running pre install hooks

Generating Pods project
  - Creating Pods project
  - Adding source files to Pods project
  - Adding frameworks to Pods project
  - Adding libraries to Pods project
  - Adding resources to Pods project
  - Linking headers
  - Installing targets
    - Installing target `Reachability` iOS 4.3
      - Generating dummy source at `Pods/Target Support Files/Reachability/Reachability-dummy.m`
    - Installing target `Pods-SampleApp_1` iOS 6.0
      - Generating dummy source at `Pods/Target Support Files/Pods-SampleApp_1/Pods-SampleApp_1-dummy.m`
    - Installing target `Pods-SampleApp_2` iOS 6.0
      - Generating dummy source at `Pods/Target Support Files/Pods-SampleApp_2/Pods-SampleApp_2-dummy.m`
  - Running post install hooks
  - Writing Xcode project file to `Pods/Pods.xcodeproj`
    - Generating deterministic UUIDs
  - Writing Lockfile in `Podfile.lock`
  - Writing Manifest in `Pods/Manifest.lock`

Integrating client projects

[!] Please close any current Xcode sessions and use `Workspace.xcworkspace` for this project from now on.

Integrating target `Pods-SampleApp_1` (`SampleApp_1.xcodeproj` project)
  Adding Build Phase '[CP] Check Pods Manifest.lock' to project.

Integrating target `Pods-SampleApp_2` (`SampleApp_2.xcodeproj` project)
  Adding Build Phase '[CP] Check Pods Manifest.lock' to project.
  - Running post install hooks
    - cocoapods-stats from `cocoapods-stats/lib/cocoapods_plugin.rb`

-> Pod installation complete! There are 2 dependencies from the Podfile and 1 total pod installed.
